
<div class="theme-wrap">
    <div class="theme-inner">
        <div class="ring" style="cursor: grab; transform: rotateY(180deg);">
            <%
                let themeConfig = {};
                for (let i = 0; i < theme.themes.length; i++) {
                    themeConfig[theme.themes[i]] = theme.path[theme.themes[i]];
                }

                // 主题的个数
                const themeNum = theme.themes.length;

                // 采用10个的旋转图片样式布局
                const ROTATE_NUM = 10;
                if (themeNum <= ROTATE_NUM) {
                    // 如果实际配置的主题较少，保证这些主题展现在样式布局的中间部分
                    let middle = ROTATE_NUM / 2;
                    let themeMiddle = themeNum % 2 ? Math.floor(themeNum / 2) : themeNum / 2 - 1;

                    let otherNum = ROTATE_NUM - themeNum;
                    let numbers = [];
                    for (let i = 1; i <= ROTATE_NUM; i++) {
                        numbers.push(i);
                    }
                    // 1 到 ROTATE_NUM 内取 otherNum 个不重复的随机数
                    let result = [];
                    for (let i = 0; i < otherNum; i++) {
                        let randomIndex = Math.floor(Math.random() * numbers.length);
                        result.push(numbers[randomIndex]);
                        numbers.splice(randomIndex, 1);
                    }
                    let otherCount = 0;

                    for (let i = 0; i < ROTATE_NUM; i++) {
                        let index = i - middle + themeMiddle;
                        // 根据样式布局的索引，来匹配配置的多主题列表中的实际索引
                        // 如果符合实际索引要求，则添加对应主题布局内容
                        if (index >= 0 && index < themeNum) {
                            let themeName = theme.themes[index];
                            let title = themeName.charAt(0).toUpperCase() + themeName.slice(1);
                            let path = themeConfig[themeName];
                            if (!path) {
                                path = '/images/default.png';
                            }
            %>
            <div class="img rotate-10-<%= i %> card">
                <div class="card-back card-container" style="background-image: url(&quot;<%= theme.back_image%>&quot;);">
                    <div class="top">
                        <h1><%= title %></h1>
                    </div>
                    <p class="middle text">
                       <%= __('introduction.' + themeName) %>
                    </p>
                    <p class="bottom" theme="<%= themeName %>">
                        <button class="theme-default btn btn-primary"><%= __('button.theme-default') %></button>
                        <button class="theme-redirect btn btn-primary"><%= __('button.theme-redirect') %></button>
                        <button class="theme-source btn btn-primary"><%= __('button.theme-source') %></button>
                    </p>
                </div>
                <div class="card-front" style="background-image: url(&quot;<%= path %>&quot;);"></div>
            </div>
            %>
            <%
                        } else {
                            let path = '/images/default-' + result[otherCount++] + '.jpg';
            %> 
            <div class="img rotate-10-<%= i %>" style="background-image: url(&quot;<%= path %>&quot;);"></div>
            <%
                        }
                    }
                }
            %>
        </div>
    </div>
    <div class="arrow-wrap">
        <div class="left-arrow"></div>
        <div class="right-arrow"></div>
    </div>
</div>

<footer id="theme-footer">
    <p>
        <% if (config.author){ %>
        &copy; <%= new Date().getFullYear() %> <%= config.author %>
        <% } %> 
    </p>
    <p>
        Powered by <a href="https://hexo.io/" target="_blank">Hexo</a>, <a href="https://github.com/huazie/hexo-theme-diversity" target="_blank">Diversity</a>
    </p>
</footer>
<%- js('js/theme') %>